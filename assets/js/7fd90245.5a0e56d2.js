"use strict";(self.webpackChunk_teamhanko_docs=self.webpackChunk_teamhanko_docs||[]).push([[970],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(n),d=o,k=h["".concat(u,".").concat(d)]||h[d]||s[d]||r;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1219:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={title:"Login with GitHub",sidebar_label:"GitHub",keywords:["social login","github"],sidebar_custom_props:{docCardIconName:"github-dark"}},i="Login with GitHub",l={unversionedId:"guides/social/github",id:"guides/social/github",title:"Login with GitHub",description:"To enable GitHub login for your project, you need to",source:"@site/docs/guides/social/github.mdx",sourceDirName:"guides/social",slug:"/guides/social/github",permalink:"/guides/social/github",draft:!1,tags:[],version:"current",frontMatter:{title:"Login with GitHub",sidebar_label:"GitHub",keywords:["social login","github"],sidebar_custom_props:{docCardIconName:"github-dark"}},sidebar:"docs",previous:{title:"Google",permalink:"/guides/social/google"}},u={},c=[{value:"Access your GitHub account",id:"access-your-github-account",level:2},{value:"Create a GitHub Oauth App",id:"create-a-github-oauth-app",level:2},{value:"Get your callback URL",id:"get-your-callback-url",level:2},{value:"Create a new OAuth application",id:"create-a-new-oauth-application",level:2},{value:"Configure GitHub credentials with your Hanko backend",id:"configure-github-credentials-with-your-hanko-backend",level:2},{value:"Enable login in your frontend app",id:"enable-login-in-your-frontend-app",level:2},{value:"With Hanko Elements",id:"with-hanko-elements",level:3},{value:"With Hanko Frontend SDK",id:"with-hanko-frontend-sdk",level:3}],p={toc:c};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"login-with-github"},"Login with GitHub"),(0,o.kt)("p",null,"To enable GitHub login for your project, you need to"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a GitHub OAuth application"),(0,o.kt)("li",{parentName:"ul"},"Create and add your Google OAuth credentials to your Hanko backend configuration"),(0,o.kt)("li",{parentName:"ul"},"Add the Hanko ",(0,o.kt)("inlineCode",{parentName:"li"},"auth")," web component or add the required code to your JS Client App using the ",(0,o.kt)("inlineCode",{parentName:"li"},"hanko-frontend-sdk"),".")),(0,o.kt)("h2",{id:"access-your-github-account"},"Access your GitHub account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Go to ",(0,o.kt)("a",{parentName:"li",href:"https://github.com"},"github.com"),"."),(0,o.kt)("li",{parentName:"ul"},"Click on 'Sign In' at the top right to log in. If you do not have an account yet, create one.")),(0,o.kt)("h2",{id:"create-a-github-oauth-app"},"Create a GitHub Oauth App"),(0,o.kt)("p",null,"Go to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/settings/developers"},"GitHub Developer Settings")," page:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Click on your profile photo at the top right"),(0,o.kt)("li",{parentName:"ul"},"Click Settings near the bottom of the menu"),(0,o.kt)("li",{parentName:"ul"},"In the left sidebar, click Developer settings (near the bottom)"),(0,o.kt)("li",{parentName:"ul"},"In the left sidebar, click OAuth Apps")),(0,o.kt)("h2",{id:"get-your-callback-url"},"Get your callback URL"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Before creating your Oauth app, you need to be aware of the provider callback URL. This is where the third party\nprovider redirects after a successful login. The callback URL consists of the base URL of your running\nHanko backend instance and the ",(0,o.kt)("inlineCode",{parentName:"p"},"/thirdparty/callback")," endpoint:"),(0,o.kt)("p",{parentName:"li"},"  ",(0,o.kt)("inlineCode",{parentName:"p"},"https://<your_hanko_backend_instance>/thirdparty/callback")))),(0,o.kt)("h2",{id:"create-a-new-oauth-application"},"Create a new OAuth application"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"On GitHub, click 'Register a new application' or 'New OAuth app' if you created one before."),(0,o.kt)("li",{parentName:"ul"},"Fill in the required information",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"In 'Application name', enter the name of your app."),(0,o.kt)("li",{parentName:"ul"},"In 'Homepage URL', enter the full URL to your app (i.e. ",(0,o.kt)("inlineCode",{parentName:"li"},"https://<your_hanko_backend_instance"),")"),(0,o.kt)("li",{parentName:"ul"},"In 'Authorization callback URL', enter the callback URL of your app (see the previous step)."))),(0,o.kt)("li",{parentName:"ul"},"Click 'Register application'. You should now see an overview of your OAuth app"),(0,o.kt)("li",{parentName:"ul"},"Copy and save the 'Client ID'"),(0,o.kt)("li",{parentName:"ul"},"Click 'Generate a new client secret'."),(0,o.kt)("li",{parentName:"ul"},"Copy and save the 'Client secret'")),(0,o.kt)("h2",{id:"configure-github-credentials-with-your-hanko-backend"},"Configure GitHub credentials with your Hanko backend"),(0,o.kt)("p",null,"Open up your backend ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/teamhanko/hanko/blob/main/backend/config/config.yaml"},"configuration file")," add\nthe following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"third_party:\n  # URL the backend redirects to if an error occurs during third party sign-in. Errors are provided\n  # as 'error' and 'error_description' query params in the redirect location URL.\n  #\n  # When using the Hanko web components it should be the URL of the page that embeds the web component\n  # such that errors can be processed properly by the web component.\n  #\n  # You do not have to add this URL to the 'allowed_redirect_urls', it is automatically included when\n  # validating redirect URLs.\n  #\n  # NOTE: URLs MUST NOT have trailing slash\n  error_redirect_url: <your_error_redirect_url>\n  # List of URLS the backend is allowed to redirect to after third party sign-in was successful.\n  #\n  # When using the Hanko web components it should be the URL of the page that embeds the\n  # web component.\n  #\n  # Supports wildcard matching through globbing. e.g. https://*.example.com will allow\n  # https://foo.example.com and https://bar.example.com to be accepted. Globbing is also\n  # supported for paths, e.g. https://foo.example.com/* will match https://foo.example.com/page1\n  # and https://foo.example.com/page2.\n  #\n  # More on globbing: https://pkg.go.dev/github.com/gobwas/glob#Compile\n  #\n  # NOTE: URLs in the list MUST NOT have trailing slash\n  allowed_redirect_urls:\n      - <your_redirect_url>\n  redirect_url: https://<your_hanko_backend_instance>/thirdparty/callback\n  providers:\n    github:\n      enabled: true\n      client_id: <your_github_client_id>\n      secret: <your_github_client_secret>\n")),(0,o.kt)("h2",{id:"enable-login-in-your-frontend-app"},"Enable login in your frontend app"),(0,o.kt)("h3",{id:"with-hanko-elements"},"With Hanko Elements"),(0,o.kt)("p",null,"Depending on what framework your frontend uses, integrate the ",(0,o.kt)("inlineCode",{parentName:"p"},"auth")," web component from the ",(0,o.kt)("inlineCode",{parentName:"p"},"hanko-elements")," package\naccording to one of our ",(0,o.kt)("a",{parentName:"p",href:"/guides/frontend"},"frontend guides"),". If everything was successful, the component should now\nrender a button to login with GitHub on the login view."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Make sure to configure the page the web component is embedded on as both your ",(0,o.kt)("inlineCode",{parentName:"p"},"error_redirect_url")," as well\nas an ",(0,o.kt)("inlineCode",{parentName:"p"},"allowed_redirect_url")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"third_party")," settings.")),(0,o.kt)("p",null,"On successful authentication with the third party provider, the backend issues a JWT (as a cookie or - if enabled\nvia backend ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/teamhanko/hanko/blob/main/backend/docs/Config.md"},"configuration")," option\n",(0,o.kt)("inlineCode",{parentName:"p"},"session.enable_auth_token_header")," - via ",(0,o.kt)("inlineCode",{parentName:"p"},"X-Auth-Token")," header). The web component recognizes this and continues the\nusual component flow on success or displays errors that occurred during third party\nprovider authentication accordingly."),(0,o.kt)("h3",{id:"with-hanko-frontend-sdk"},"With Hanko Frontend SDK"),(0,o.kt)("p",null,"When building your own UI, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"@teamhanko/hanko-frontend-sdk")," to initialize third party sign in.\nCall ",(0,o.kt)("inlineCode",{parentName:"p"},"hanko.thirdParty.auth")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"github")," as your provider and the target URL in your app you want to redirect to\nafter successful third party authentication (must be\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/teamhanko/hanko/blob/main/backend/docs/Config.md"},"configured")," as an allowed redirect url via\n",(0,o.kt)("inlineCode",{parentName:"p"},"third_party.allowed_redirect_urls"),"). Doing so redirects you to the third party provider, where you then will be prompted\nto authenticate and provide consent for the API to access your data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'import { Hanko } from "@teamhanko/hanko-frontend-sdk"\n\nconst hanko = new Hanko("<your_hanko_backend_instance>")\n\nasync function signInWithGitHub() {\n    try {\n       await hanko.thirdParty.auth("github", "<your_redirect_url>");\n    } catch (error) {\n      // handle error\n    }\n}\n')),(0,o.kt)("p",null,"On successful authentication with the third party provider, the API redirects you to the given redirect URL. The\nURL query includes a one time token that must be exchanged for a JWT. Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"hanko.token.validate"),"\nmethod to validate the token:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'import { Hanko } from "@teamhanko/hanko-frontend-sdk"\n\nconst hanko = new Hanko("<your_hanko_backend_instance>")\n\nasync function onLoad() {\n    try {\n       await hanko.token.validate();\n    } catch (error) {\n      // handle error\n    }\n\n    // you should now have a JWT cookie set\n}\n')),(0,o.kt)("p",null,"On success, the API issues a JWT which is then set by the SDK as a cookie (",(0,o.kt)("inlineCode",{parentName:"p"},"hanko"),"). All other SDK methods can now\nuse the cookie to make authenticated requests to the API (if your frontend runs on a different domain, make sure to\ninclude your frontend domain in the ",(0,o.kt)("inlineCode",{parentName:"p"},"server.public.cors.allowed_origins")," in your\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/teamhanko/hanko/blob/main/backend/docs/Config.md"},"configuration"),")."))}s.isMDXComponent=!0}}]);