"use strict";(self.webpackChunk_teamhanko_docs=self.webpackChunk_teamhanko_docs||[]).push([[246],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>N});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var u=n.createContext({}),d=function(t){var e=n.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=d(t.components);return n.createElement(u.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,u=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),m=d(a),N=r,g=m["".concat(u,".").concat(N)]||m[N]||s[N]||l;return a?n.createElement(g,i(i({ref:e},p),{},{components:a})):n.createElement(g,i({ref:e},p))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(t,e,a)=>{a.d(e,{Z:()=>i});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function i(t){let{children:e,hidden:a,className:i}=t;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},e)}},4866:(t,e,a)=>{a.d(e,{Z:()=>y});var n=a(7462),r=a(7294),l=a(6010),i=a(2466),o=a(6775),u=a(1980),d=a(7392),p=a(12);function s(t){return function(t){return r.Children.map(t,(t=>{if((0,r.isValidElement)(t)&&"value"in t.props)return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(t).map((t=>{let{props:{value:e,label:a,attributes:n,default:r}}=t;return{value:e,label:a,attributes:n,default:r}}))}function m(t){const{values:e,children:a}=t;return(0,r.useMemo)((()=>{const t=e??s(a);return function(t){const e=(0,d.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,a])}function N(t){let{value:e,tabValues:a}=t;return a.some((t=>t.value===e))}function g(t){let{queryString:e=!1,groupId:a}=t;const n=(0,o.k6)(),l=function(t){let{queryString:e=!1,groupId:a}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,u._X)(l),(0,r.useCallback)((t=>{if(!l)return;const e=new URLSearchParams(n.location.search);e.set(l,t),n.replace({...n.location,search:e.toString()})}),[l,n])]}function c(t){const{defaultValue:e,queryString:a=!1,groupId:n}=t,l=m(t),[i,o]=(0,r.useState)((()=>function(t){let{defaultValue:e,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!N({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=a.find((t=>t.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:e,tabValues:l}))),[u,d]=g({queryString:a,groupId:n}),[s,c]=function(t){let{groupId:e}=t;const a=function(t){return t?`docusaurus.tab.${t}`:null}(e),[n,l]=(0,p.Nk)(a);return[n,(0,r.useCallback)((t=>{a&&l.set(t)}),[a,l])]}({groupId:n}),k=(()=>{const t=u??s;return N({value:t,tabValues:l})?t:null})();(0,r.useLayoutEffect)((()=>{k&&o(k)}),[k]);return{selectedValue:i,selectValue:(0,r.useCallback)((t=>{if(!N({value:t,tabValues:l}))throw new Error(`Can't select invalid tab value=${t}`);o(t),d(t),c(t)}),[d,c,l]),tabValues:l}}var k=a(2389);const h="tabList__CuJ",f="tabItem_LNqP";function b(t){let{className:e,block:a,selectedValue:o,selectValue:u,tabValues:d}=t;const p=[],{blockElementScrollPositionUntilNextRender:s}=(0,i.o5)(),m=t=>{const e=t.currentTarget,a=p.indexOf(e),n=d[a].value;n!==o&&(s(e),u(n))},N=t=>{var e;let a=null;switch(t.key){case"Enter":m(t);break;case"ArrowRight":{const e=p.indexOf(t.currentTarget)+1;a=p[e]??p[0];break}case"ArrowLeft":{const e=p.indexOf(t.currentTarget)-1;a=p[e]??p[p.length-1];break}}null==(e=a)||e.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},e)},d.map((t=>{let{value:e,label:a,attributes:i}=t;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===e?0:-1,"aria-selected":o===e,key:e,ref:t=>p.push(t),onKeyDown:N,onClick:m},i,{className:(0,l.Z)("tabs__item",f,null==i?void 0:i.className,{"tabs__item--active":o===e})}),a??e)})))}function _(t){let{lazy:e,children:a,selectedValue:n}=t;if(a=Array.isArray(a)?a:[a],e){const t=a.find((t=>t.props.value===n));return t?(0,r.cloneElement)(t,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==n}))))}function A(t){const e=c(t);return r.createElement("div",{className:(0,l.Z)("tabs-container",h)},r.createElement(b,(0,n.Z)({},t,e)),r.createElement(_,(0,n.Z)({},t,e)))}function y(t){const e=(0,k.Z)();return r.createElement(A,(0,n.Z)({key:String(e)},t))}},4e3:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));a(4866),a(5162);const l={title:"SAML SSO (Enterprise Feature)",sidebar_label:"SAML SSO",description:"Learn how to configure SAML SSO for Hanko"},i="Using SAML SSO",o={unversionedId:"guides/ee/saml",id:"guides/ee/saml",title:"SAML SSO (Enterprise Feature)",description:"Learn how to configure SAML SSO for Hanko",source:"@site/docs/guides/ee/saml.mdx",sourceDirName:"guides/ee",slug:"/guides/ee/saml",permalink:"/guides/ee/saml",draft:!1,tags:[],version:"current",frontMatter:{title:"SAML SSO (Enterprise Feature)",sidebar_label:"SAML SSO",description:"Learn how to configure SAML SSO for Hanko"},sidebar:"docs",previous:{title:"Enterprise Features",permalink:"/guides/ee"},next:{title:"Symfony",permalink:"/guides/tutorials/php"}},u={},d=[{value:"Wording",id:"wording",level:2},{value:"Configure SAML",id:"configure-saml",level:2},{value:"Additional Attributes",id:"additional-attributes",level:3},{value:"Auth0",id:"auth0",level:4},{value:"Configure Identity Provider",id:"configure-identity-provider",level:2},{value:"Use SAML Login",id:"use-saml-login",level:2}],p={toc:d};function s(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-saml-sso"},"Using SAML SSO"),(0,r.kt)("p",null,"SAML SSO provides you with a way to connect your application to enterprise SSO identity providers like Auth0 or MS AD.\nIn this guide you will learn how to configure and use the enterprise SAML SSO feature."),(0,r.kt)("h2",{id:"wording"},"Wording"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Acronym"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"SP")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Service Provider"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Webapp or Backend-Service which needs to authenticate the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"IdP")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Identity Provider"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Holds identity data for a user. Used to authenticate the user")))),(0,r.kt)("h2",{id:"configure-saml"},"Configure SAML"),(0,r.kt)("p",null,"To configure SAML all you need is to append the following configuration to the root element of your hanko config.yaml file\nand replace all ",(0,r.kt)("inlineCode",{parentName:"p"},"<VARIABLE>"),"-Parts with your parameters (There will be an explanation of all tags after the config):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"showLineNumbers",showLineNumbers:!0},'saml:\n  enabled: true\n  endpoint_url: <ENDPOINT_URL>\n  audience_uri: "urn:hanko:application"\n  default_redirect_url: <YOUR_APPLICATION_DEFAULT_URL>\n  allowed_redirect_urls:\n    - "<A_REDIRECT_URL>"\n  options:\n    sign_authn_requests: true\n    force_login: false\n    validate_encryption_cert: true\n    skip_signature_validation: false\n    allow_missing_attributes: true\n  identity_providers:\n    - enabled: true\n      name: "<CHOOSE_A_NAME>"\n      domain: "<YOUR_EMAIL_DOMAIN>"\n      metadata_url: "<URL_TO_THE_METADATA_OF_YOUR_IDP>"\n      skip_email_verification: true\n      attribute_map:\n        name: "<NAME_ATTRIBUTE_IN_IDP_ASSERTION>"\n        family_name: "<FAMILY_NAME_ATTRIBUTE_IN_IDP_ASSERTION>"\n        given_name: "<GIVEN_NAME_ATTRIBUTE_IN_IDP_ASSERTION>"\n        middle_name: "<MIDDLE_NAME_ATTRIBUTE_IN_IDP_ASSERTION>"\n        nickname: "<NICKNAME_ATTRIBUTE_IN_IDP_ASSERTION>"\n        preferred_username: "<PREFERRED_USERNAME_ATTRIBUTE_IN_IDP_ASSERTION>"\n        profile: "<PROFILE_ATTRIBUTE_IN_IDP_ASSERTION>"\n        picture: "<PICTURE_ATTRIBUTE_IN_IDP_ASSERTION>"\n        website: "<WEBSITE_ATTRIBUTE_IN_IDP_ASSERTION>"\n        gender: "<GENDER_ATTRIBUTE_IN_IDP_ASSERTION>"\n        birthdate: "<BIRTHDAY_ATTRIBUTE_IN_IDP_ASSERTION>"\n        zone_info: "<ZONE_INFO_ATTRIBUTE_IN_IDP_ASSERTION>"\n        locale: "<LOCALE_ATTRIBUTE_IN_IDP_ASSERTION>"\n        update_at: "<UPDATED_AT_ATTRIBUTE_IN_IDP_ASSERTION>"\n        email: "<EMAIL_ATTRIBUTE_IN_IDP_ASSERTION>"\n        email_verified: "<EMAIL_VERIFIED_ATTRIBUTE_IN_IDP_ASSERTION>"\n        phone: "<PHONE_ATTRIBUTE_IN_IDP_ASSERTION>"\n        phone_verified: "<PHONE_VERIFIED_ATTRIBUTE_IN_IDP_ASSERTION>"\n')),(0,r.kt)("p",null,"Explanation of all tags:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Level"),(0,r.kt)("th",{parentName:"tr",align:null},"Tag"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"saml"),(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Enables or disabled the saml api endpoints. Default: false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"saml"),(0,r.kt)("td",{parentName:"tr",align:null},"endpoint_url"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"URL at which the SAML endpoints like metadata, callback, etc. are available (e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"http://example.com/api"),"). Will be provided as metadata for IDP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"saml"),(0,r.kt)("td",{parentName:"tr",align:null},"audience_uri"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Audience identifier. Should be unique to your app. Will be provided as metadata for IDP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"saml"),(0,r.kt)("td",{parentName:"tr",align:null},"default_redirect_url"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"URL to which to redirect in case of errors or when no allowed_redirect_url is provided")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"saml"),(0,r.kt)("td",{parentName:"tr",align:null},"allowed_redirect_urls"),(0,r.kt)("td",{parentName:"tr",align:null},"[]string"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of URLs to which hanko is allowed to redirect.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"saml"),(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Optional feature toggles for service provider operations")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"saml"),(0,r.kt)("td",{parentName:"tr",align:null},"identity_providers"),(0,r.kt)("td",{parentName:"tr",align:null},"[]identity_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of Identity Providers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"sign_authn_requests"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Toggle for signing initial authn requests. Default: true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"force_login"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Forces the IDP to always show a login window for the user. Default: false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"validate_encryption_cert"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Check if the certificate used for the encryption of the IDP responses is valid. Default: true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"skip_signature_validation"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Skip checking if the signature of a IDP response is valid. Default: false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"allow_missing_attributes"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"allows missing attributes (e.g. the IDP specifies an phone attribute in metadata but does not send it with a SAML Assertion Response). Default: false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identity_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Activates or deactivates an identity provider. Default: false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identity_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Easy identifiable name of a provider")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identity_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"domain"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"At login the domain will be extracted from the users email address and then used to identify the idp to use. This tag defines for which domain the idp is used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identity_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"metadata_url"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"public URL where the API can fetch the IDP metadata.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identity_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"skip_email_verification"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Toggles if the email_verified attribute will be checked. Default: false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identity_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Map of Attributes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the name field in HANKO. Default Value: ",(0,r.kt)("inlineCode",{parentName:"td"},"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"family_name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the family name field in HANKO. Default Value: ",(0,r.kt)("inlineCode",{parentName:"td"},"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"given_name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the given name field in HANKO. Default Value: ",(0,r.kt)("inlineCode",{parentName:"td"},"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"middle_name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the middle name field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"nickname"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the nickname field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"preferred_username"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the preferred_username field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"profile"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the profile field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"picture"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the picture field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"website"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the website field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"gender"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the gender field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"birthdate"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the birthdate field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"zone_info"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the zone_info field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"locale"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the locale field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"updated_at"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the updated_at field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"email"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the email field in HANKO. Default: ",(0,r.kt)("inlineCode",{parentName:"td"},"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"email_verified"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the email_verified field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"phone"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the phone field in HANKO.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attribute_map"),(0,r.kt)("td",{parentName:"tr",align:null},"phone_verified"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps a SAML Assertion Attribute to the phone_verified field in HANKO.")))),(0,r.kt)("p",null,"Every IDP-Attribute which is not a hanko field will be mapped into a custom claim map of type ",(0,r.kt)("inlineCode",{parentName:"p"},"map[string]string")," where the key of an entry is the attribute name and the value of an entry is the attribute value."),(0,r.kt)("h3",{id:"additional-attributes"},"Additional Attributes"),(0,r.kt)("p",null,"For some providers we also provide some additional attributes. The provider will be extracted from the metadata url (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"https://<tenant>.eu.auth0.com/samlp/metadata/<random_app_string>")," will load defaults for auth0).\nCurrently, there the following extra defaults are provided for the following providers:"),(0,r.kt)("h4",{id:"auth0"},"Auth0"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"email_verified"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://schemas.auth0.com/email_verified"},"http://schemas.auth0.com/email_verified"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nickname"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://schemas.auth0.com/nickname"},"http://schemas.auth0.com/nickname"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"picture"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://schemas.auth0.com/picture"},"http://schemas.auth0.com/picture"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"updated_at"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://schemas.auth0.com/updated_at"},"http://schemas.auth0.com/updated_at"))))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Please be aware not to set ",(0,r.kt)("inlineCode",{parentName:"em"},"mapUnknownClaimsAsIs")," to true in your auth0 IdP config.")," If you set this attribute to true auth0\nwill scratch the ",(0,r.kt)("inlineCode",{parentName:"p"},"http://schemas.auth0.com/auth0/")," part, and you have to provide an ",(0,r.kt)("inlineCode",{parentName:"p"},"attribute_map"),"-Field."),(0,r.kt)("h2",{id:"configure-identity-provider"},"Configure Identity Provider"),(0,r.kt)("p",null,"To configure your entity provider you will mabye need the following parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Callback-URL: This will be ",(0,r.kt)("inlineCode",{parentName:"li"},"<ENDPOINT_URL>/callback")," (e.g.: ENDPOINT_URL: http://localhost:8000 -> http://localhost:8000/saml/callback)"),(0,r.kt)("li",{parentName:"ul"},"Service Provider Metadata URL: This will be ",(0,r.kt)("inlineCode",{parentName:"li"},"<ENDPOINT_URL>/metadata?domain=<DOMAIN>")," (e.g.: ENDPOINT_URL: http://localhost:8000 , DOMAIN: test.example -> http://localhost:8000/saml/metadata?domain=test.example)"),(0,r.kt)("li",{parentName:"ul"},"Logout URL: This will be ",(0,r.kt)("inlineCode",{parentName:"li"},"<ENDPOINT_URL>/logout")," (e.g.: ENDPOINT_URL: http://localhost:8000 -> http://localhost:8000/saml/logout) - Currently not supported"),(0,r.kt)("li",{parentName:"ul"},"Auth URL: This will be ",(0,r.kt)("inlineCode",{parentName:"li"},"<ENDPOINT_URL>/auth?domain=<DOMAIN>")," (e.g.: ENDPOINT_URL: http://localhost:8000 , DOMAIN: test.example -> http://localhost:8000/saml/auth?domain=test.example)")),(0,r.kt)("p",null,"If your IDP requires you to upload the certificate file of your service provider you can download it on the following url:\n",(0,r.kt)("inlineCode",{parentName:"p"},"<ENDPOINT_URL>/saml/metadata?domain=<DOMAIN>&cert_only=true")),(0,r.kt)("h2",{id:"use-saml-login"},"Use SAML Login"),(0,r.kt)("p",null,"With an active saml integration ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/teamhanko/hanko/blob/main/frontend/elements/README.md"},"hanko-elements")," will automatically try to use your identity provider. Hanko will extract\nthe domain from the email address of a user and if it matches the domain tag of an IDP the user will be redirected to\nthe login form of the IDP."))}s.isMDXComponent=!0}}]);