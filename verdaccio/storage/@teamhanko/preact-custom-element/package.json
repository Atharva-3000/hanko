{
	"name": "@teamhanko/preact-custom-element",
	"versions": {
		"4.2.2": {
			"name": "@teamhanko/preact-custom-element",
			"version": "4.2.2",
			"description": "Wrap your component up as a custom element",
			"main": "dist/preact-custom-element.js",
			"module": "dist/preact-custom-element.esm.js",
			"unpkg": "dist/preact-custom-element.umd.js",
			"source": "src/index.js",
			"types": "dist/index.d.ts",
			"scripts": {
				"prepare": "microbundle -no-generateTypes && npx --yes cpy-cli 'src/*.d.ts' 'dist'",
				"lint": "eslint src/*.{js,jsx}",
				"test": "wtr src/*.test.{js,jsx}",
				"test:browsers": "wtr src/*.test.{js,jsx} --playwright --browsers chromium firefox webkit",
				"prettier": "prettier **/*.{js,jsx} --write",
				"prepublishOnly": "npm run lint && npm run test"
			},
			"eslintConfig": {
				"ignorePatterns": [
					"index.d.ts"
				],
				"extends": "developit",
				"settings": {
					"react": {
						"version": "latest"
					}
				},
				"rules": {
					"brace-style": "off",
					"jest/expect-expect": "off",
					"lines-around-comment": "off",
					"comma-dangle": "off",
					"no-unused-vars": [
						2,
						{
							"args": "none",
							"varsIgnorePattern": "^h$"
						}
					]
				}
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/preactjs/preact-custom-element.git"
			},
			"keywords": [
				"preact",
				"web",
				"components",
				"custom",
				"element"
			],
			"authors": [
				"Bradley J. Spaulding",
				"The Preact Authors (https://preactjs.com)"
			],
			"license": "MIT",
			"bugs": {
				"url": "https://github.com/preactjs/preact-custom-element/issues"
			},
			"homepage": "https://github.com/preactjs/preact-custom-element",
			"peerDependencies": {
				"preact": "10.x"
			},
			"devDependencies": {
				"@open-wc/testing": "^3.1.7",
				"@web/dev-server-core": "^0.3.19",
				"@web/dev-server-esbuild": "^0.3.3",
				"@web/test-runner": "^0.15.0",
				"@web/test-runner-playwright": "^0.9.0",
				"eslint": "^7.7.0",
				"eslint-config-developit": "^1.2.0",
				"get-stream": "^6.0.1",
				"husky": "^4.2.5",
				"lint-staged": "^13.0.4",
				"microbundle": "^0.15.1",
				"preact": "^10.4.8",
				"prettier": "^2.1.1"
			},
			"lint-staged": {
				"**/*.{js,jsx,ts,tsx,yml}": [
					"prettier --write"
				]
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"gitHead": "073263bc631e7626b8242f0d243b2401833dc680",
			"_id": "@teamhanko/preact-custom-element@4.2.2",
			"_nodeVersion": "16.15.1",
			"_npmVersion": "8.11.0",
			"dist": {
				"integrity": "sha512-3djCQr25IxQIgpidxD8J0fTQ7/hMuoa5Nmv7delQc6sX4kXgv9e/pE01cywpmGZLi69H1KUH4dmZ4cPPJQrsQQ==",
				"shasum": "67e9ebb54da2607e818f360be0b69e9fde9c01ee",
				"tarball": "https://registry.npmjs.org/@teamhanko/preact-custom-element/-/preact-custom-element-4.2.2.tgz",
				"fileCount": 18,
				"unpackedSize": 66098,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIDYSb2RDFoAnVCRL2sLdCwMGSPS8CZjHqMlU/PFm/grHAiBsj2pJHfBbCV0PdAsp829opoOLdfeyBL9WLLz9t4vxRw=="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiH+GACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpCJBAAlk6Wj790Ac5bg3jwiSN+xViyMRvQ53XOCJWGSI+oE3VunZEP\r\n2fJNWqtuhXkkHb0akWrDoQ/MVV1RATJR7I2gUP4Qg52Qa5PtZCJl628Yyz43\r\nSHAlH3CVHzlNrIVvAu/Jxbm5IPjsRAOOBt1czD8wFA0vjlVe6gKcpjHxiR0X\r\nUBobEidjiiRNmQfTh1bxOaUF0Gt92JZi00mkbNXpLnPV3LMfHnnQaLHI0Xru\r\npguvPlGewu1LBMAW1/qrYbOLKN9G428z9YoSAIhgLm9qBLM7Cu9O6tjW0BqM\r\nBiDf08tSXYZr6Im11XJAyQQQC0amZYi847PO6pLeWLD0iHMYbyFLogxn7uQR\r\nnwSBmZruJ+Ojjv7n1VnB26V1vunLsqT67K8a8/0x9lwQC4CB1hBgULzOCpuR\r\nxKFPjVCIvFDadnkrli7wA1qfy4XlE2NPBCS5nbDq/HQk3mB3tgM8Rp/nZqMa\r\ndGVeCmsABMWpoTtZoTixb7/AzxhWAGx5KUpeDRtm1ah3t7DQxyrGzXxv3ngb\r\nLljozIdlEPrUY3t2jFbb/LLFcIO2aUR6brEDkXl17Ze3b8Oc+esvt6MtkgA7\r\n+r36JG4wiXRdpHC4Si+9LPs+Hztr95amISym1fEYzTtu4UNvj1Czxiap0HMC\r\nrozJaoQ0L7dclfpg9pYCTtdG1hEb2zTGkpY=\r\n=TKyX\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "lfleischmann",
				"email": "lennart.fleischmann@hanko.io"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "felixmagedanz",
					"email": "felix.magedanz@hanko.io"
				},
				{
					"name": "bjoern-m",
					"email": "bjoern.mueller@hanko.io"
				},
				{
					"name": "lfleischmann",
					"email": "lennart.fleischmann@hanko.io"
				},
				{
					"name": "freddy_develop",
					"email": "frederic.jahn@hanko.io"
				},
				{
					"name": "felix.dubrownik",
					"email": "felix.bause@hanko.io"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/preact-custom-element_4.2.2_1669889925840_0.07634773299397168"
			},
			"_hasShrinkwrap": false,
			"contributors": []
		}
	},
	"time": {
		"created": "2022-12-01T10:18:45.754Z",
		"4.2.2": "2022-12-01T10:18:46.058Z",
		"modified": "2022-12-01T10:18:46.288Z"
	},
	"users": {},
	"dist-tags": {
		"latest": "4.2.2"
	},
	"_uplinks": {
		"npmjs": {
			"etag": "W/\"e6261d2d4ccb25c86eece5520f3f57ce\"",
			"fetched": 1670946028854
		}
	},
	"_distfiles": {
		"preact-custom-element-4.2.2.tgz": {
			"url": "https://registry.npmjs.org/@teamhanko/preact-custom-element/-/preact-custom-element-4.2.2.tgz",
			"sha": "67e9ebb54da2607e818f360be0b69e9fde9c01ee",
			"registry": "npmjs"
		}
	},
	"_attachments": {},
	"_rev": "1-d62dac8912ceb815",
	"_id": "@teamhanko/preact-custom-element",
	"readme": "# preact-custom-element\n\nGenerate/register a custom element from a preact component. As of 3.0.0, this library implements the Custom Elements v1 spec.\nPrevious versions (< 3.0.0) implemented the v0 proposal, which was only implemented in Chrome and is abandoned.\n\n## Usage\n\nImport `CustomElement` and call with your component a tag name __\\*__, and a list of attribute names you want to observe:\n\n```javascript\nimport register from 'preact-custom-element';\n\nconst Greeting = ({ name = 'World' }) => (\n  <p>Hello, {name}!</p>\n);\n\nregister(Greeting, 'x-greeting', ['name']);\n```\n\n> _**\\* Note:** as per the [Custom Elements specification](https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name), the tag name must contain a hyphen._\n\nUse the new tag name in HTML, attribute keys and values will be passed in as props:\n\n```html\n<x-greeting name=\"Billy Jo\"></x-greeting>\n```\n\nOutput:\n\n```html\n<p>Hello, Billy Jo!</p>\n```\n\n### Prop Names and Automatic Prop Names\n\nThe Custom Elements V1 specification requires explictly stating the names of any attributes you want to observe. From your Preact component perspective, `props` could be an object with any keys at runtime, so it's not always clear which props should be accepted as attributes.\n\nIf you omit the third parameter to `register()`, the list of attributes to observe can be specified using a static `observedAttributes` property on your Component. This also works for the Custom Element's name, which can be specified using a `tagName` static property:\n\n```js\nimport register from 'preact-custom-element';\n\n// <x-greeting name=\"Bo\"></x-greeting>\nclass Greeting extends Component {\n  // Register as <x-greeting>:\n  static tagName = 'x-greeting';\n\n  // Track these attributes:\n  static observedAttributes = ['name'];\n\n  render({ name }) {\n    return <p>Hello, {name}!</p>;\n  }\n}\nregister(Greeting);\n```\n\nIf no `observedAttributes` are specified, they will be inferred from the keys of `propTypes` if present on the Component:\n\n```js\n// Other option: use PropTypes:\nfunction FullName(props) {\n  return <span>{props.first} {props.last}</span>\n}\nFullName.propTypes = {\n  first: Object,   // you can use PropTypes, or this\n  last: Object     // trick to define untyped props.\n};\nregister(FullName, 'full-name');\n```\n\n\n## Related\n\n[preact-shadow-dom](https://github.com/bspaulding/preact-shadow-dom)"
}